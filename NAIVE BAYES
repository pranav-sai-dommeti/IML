  import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import CategoricalNB
from sklearn.metrics import accuracy_score, classification_report

# Sample dataset
df = pd.DataFrame({
    'Feature1': [1, 2, 2, 1, 3, 3, 1, 2, 3, 3],
    'Feature2': ['A', 'B', 'B', 'A', 'C', 'C', 'A', 'B', 'C', 'C'],
    'Class': [0, 1, 1, 0, 1, 1, 0, 1, 1, 0]
})

# Encode categorical column
df_encoded = pd.get_dummies(df, columns=['Feature2'], drop_first=True)

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(
    df_encoded.drop('Class', axis=1),
    df_encoded['Class'],
    test_size=0.2,
    random_state=42
)

# Train model
model = CategoricalNB()
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))
